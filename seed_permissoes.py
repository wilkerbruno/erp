"""
Script para popular permiss√µes e roles padr√£o do sistema
Execute: python seed_permissoes.py
"""

from app import create_app, db
from app.models import Permissao, Role

app = create_app()

def criar_permissoes_padrao():
    """Cria permiss√µes padr√£o do sistema"""
    
    permissoes = [
        # Permiss√µes de Usu√°rios
        {'nome': 'Visualizar Usu√°rios', 'codigo': 'usuarios.visualizar', 'modulo': 'usuarios'},
        {'nome': 'Criar Usu√°rios', 'codigo': 'usuarios.criar', 'modulo': 'usuarios'},
        {'nome': 'Editar Usu√°rios', 'codigo': 'usuarios.editar', 'modulo': 'usuarios'},
        {'nome': 'Excluir Usu√°rios', 'codigo': 'usuarios.excluir', 'modulo': 'usuarios'},
        
        # Permiss√µes de RH
        {'nome': 'Visualizar Colaboradores', 'codigo': 'colaboradores.visualizar', 'modulo': 'rh'},
        {'nome': 'Criar Colaboradores', 'codigo': 'colaboradores.criar', 'modulo': 'rh'},
        {'nome': 'Editar Colaboradores', 'codigo': 'colaboradores.editar', 'modulo': 'rh'},
        {'nome': 'Excluir Colaboradores', 'codigo': 'colaboradores.excluir', 'modulo': 'rh'},
        {'nome': 'Gerenciar Folha de Pagamento', 'codigo': 'folha.gerenciar', 'modulo': 'rh'},
        {'nome': 'Visualizar Relat√≥rios RH', 'codigo': 'rh.relatorios', 'modulo': 'rh'},
        
        # Permiss√µes de Consultoria
        {'nome': 'Visualizar Projetos Consultoria', 'codigo': 'consultoria.visualizar', 'modulo': 'consultoria'},
        {'nome': 'Criar Projetos Consultoria', 'codigo': 'consultoria.criar', 'modulo': 'consultoria'},
        {'nome': 'Editar Projetos Consultoria', 'codigo': 'consultoria.editar', 'modulo': 'consultoria'},
        {'nome': 'Realizar Diagn√≥sticos', 'codigo': 'diagnosticos.realizar', 'modulo': 'consultoria'},
        {'nome': 'Gerenciar Auditorias', 'codigo': 'auditorias.gerenciar', 'modulo': 'consultoria'},
        
        # Permiss√µes de Projetos
        {'nome': 'Visualizar Projetos', 'codigo': 'projetos.visualizar', 'modulo': 'projetos'},
        {'nome': 'Criar Projetos', 'codigo': 'projetos.criar', 'modulo': 'projetos'},
        {'nome': 'Editar Projetos', 'codigo': 'projetos.editar', 'modulo': 'projetos'},
        {'nome': 'Excluir Projetos', 'codigo': 'projetos.excluir', 'modulo': 'projetos'},
        
        # Permiss√µes de Permiss√µes/Roles
        {'nome': 'Visualizar Permiss√µes', 'codigo': 'permissoes.visualizar', 'modulo': 'sistema'},
        {'nome': 'Gerenciar Permiss√µes', 'codigo': 'permissoes.gerenciar', 'modulo': 'sistema'},
        {'nome': 'Visualizar Roles', 'codigo': 'roles.visualizar', 'modulo': 'sistema'},
        {'nome': 'Criar Roles', 'codigo': 'roles.criar', 'modulo': 'sistema'},
        {'nome': 'Editar Roles', 'codigo': 'roles.editar', 'modulo': 'sistema'},
        {'nome': 'Gerenciar N√≠veis de Acesso', 'codigo': 'nivel_acesso.gerenciar', 'modulo': 'sistema'},
        
        # Permiss√µes de Configura√ß√µes
        {'nome': 'Acessar Configura√ß√µes', 'codigo': 'config.acessar', 'modulo': 'sistema'},
        {'nome': 'Gerenciar Cargos', 'codigo': 'cargos.editar', 'modulo': 'rh'},
        {'nome': 'Gerenciar Departamentos', 'codigo': 'departamentos.editar', 'modulo': 'rh'},
    ]
    
    print("Criando permiss√µes padr√£o...")
    for perm_data in permissoes:
        perm = Permissao.query.filter_by(codigo=perm_data['codigo']).first()
        if not perm:
            perm = Permissao(**perm_data, descricao=f"Permiss√£o para {perm_data['nome']}")
            db.session.add(perm)
            print(f"  ‚úì Criada: {perm_data['nome']}")
        else:
            print(f"  - J√° existe: {perm_data['nome']}")
    
    db.session.commit()
    print("‚úÖ Permiss√µes criadas!
")

def criar_roles_padrao():
    """Cria roles padr√£o do sistema"""
    
    roles_config = [
        {
            'nome': 'Administrador',
            'codigo': 'admin',
            'descricao': 'Acesso total ao sistema',
            'nivel_hierarquico': 10,
            'permissoes': 'todas'  # Todas as permiss√µes
        },
        {
            'nome': 'Gestor RH',
            'codigo': 'gestor_rh',
            'descricao': 'Gest√£o completa do m√≥dulo RH',
            'nivel_hierarquico': 8,
            'permissoes': [
                'colaboradores.visualizar', 'colaboradores.criar', 'colaboradores.editar',
                'folha.gerenciar', 'rh.relatorios', 'cargos.editar', 'departamentos.editar',
                'nivel_acesso.gerenciar'
            ]
        },
        {
            'nome': 'Analista RH',
            'codigo': 'analista_rh',
            'descricao': 'Opera√ß√µes de RH sem acesso √† folha',
            'nivel_hierarquico': 5,
            'permissoes': [
                'colaboradores.visualizar', 'colaboradores.criar', 'colaboradores.editar',
                'rh.relatorios'
            ]
        },
        {
            'nome': 'Consultor',
            'codigo': 'consultor',
            'descricao': 'Acesso ao m√≥dulo de consultoria',
            'nivel_hierarquico': 6,
            'permissoes': [
                'consultoria.visualizar', 'consultoria.criar', 'consultoria.editar',
                'diagnosticos.realizar', 'auditorias.gerenciar'
            ]
        },
        {
            'nome': 'Gerente de Projetos',
            'codigo': 'gerente_projetos',
            'descricao': 'Gest√£o completa de projetos',
            'nivel_hierarquico': 7,
            'permissoes': [
                'projetos.visualizar', 'projetos.criar', 'projetos.editar', 'projetos.excluir'
            ]
        },
        {
            'nome': 'Colaborador',
            'codigo': 'colaborador',
            'descricao': 'Acesso b√°sico ao sistema',
            'nivel_hierarquico': 1,
            'permissoes': [
                'colaboradores.visualizar'  # Apenas visualizar pr√≥prio perfil
            ]
        },
        {
            'nome': 'Auditor',
            'codigo': 'auditor',
            'descricao': 'Realiza auditorias e inspe√ß√µes',
            'nivel_hierarquico': 6,
            'permissoes': [
                'auditorias.gerenciar', 'consultoria.visualizar', 'diagnosticos.realizar'
            ]
        }
    ]
    
    print("Criando roles padr√£o...")
    for role_data in roles_config:
        role = Role.query.filter_by(codigo=role_data['codigo']).first()
        
        if not role:
            role = Role(
                nome=role_data['nome'],
                codigo=role_data['codigo'],
                descricao=role_data['descricao'],
                nivel_hierarquico=role_data['nivel_hierarquico']
            )
            db.session.add(role)
            db.session.flush()
            
            # Atribuir permiss√µes
            if role_data['permissoes'] == 'todas':
                permissoes = Permissao.query.all()
            else:
                permissoes = Permissao.query.filter(Permissao.codigo.in_(role_data['permissoes'])).all()
            
            role.permissoes = permissoes
            print(f"  ‚úì Criado: {role_data['nome']} com {len(permissoes)} permiss√µes")
        else:
            print(f"  - J√° existe: {role_data['nome']}")
    
    db.session.commit()
    print("‚úÖ Roles criados!
")

def main():
    """Executa seed de permiss√µes"""
    with app.app_context():
        print("="*60)
        print("POPULANDO PERMISS√ïES E ROLES DO SISTEMA")
        print("="*60 + "
")
        
        criar_permissoes_padrao()
        criar_roles_padrao()
        
        print("="*60)
        print("‚úÖ SEED CONCLU√çDO COM SUCESSO!")
        print("="*60)
        
        # Estat√≠sticas
        total_permissoes = Permissao.query.count()
        total_roles = Role.query.count()
        
        print(f"
üìä Estat√≠sticas:")
        print(f"   ‚Ä¢ Permiss√µes: {total_permissoes}")
        print(f"   ‚Ä¢ Roles: {total_roles}")

if __name__ == '__main__':
    main()
